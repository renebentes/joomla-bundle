<snippet>
	<content><![CDATA[require_once JPATH_SITE . '/components/com_${1:${TM_PROJECT/(.+)/\L\1/g}}/helpers/route.php';

JModelLegacy::addIncludePath(JPATH_SITE . '/components/com_${1/(.+)/\L\1/g}/models', '${1/(.+)/\u\1/g}Model');

/**
 * ${2:Hello} module helper.
 *
 * @package     ${2/(.+)/\u\1/g}
 * @subpackage  mod_${2/(.+)/\L\1/g}
 * @since       ${3:${TM_VERSION}}
 */
abstract class mod${2/(.+)/\u\1/g}Helper
{
	/**
	 * Get a list of the ${4:items}.
	 *
	 * @param   JRegistry  &\$params  The module options.
	 *
	 * @return  array
	 *
	 * @since   $3
	 */
	public static function getList(&\$params)
	{
		// Get the dbo
		\$db = JFactory::getDbo();

		// Get an instance of the generic ${4/(.+)/\L\1/g} model
		\$model = JModelLegacy::getInstance('${4/(.+)/\u\1/g}', '${1/(.+)/\u\1/g}Model', array('ignore_request' => true));

		// Set application parameters in model
		\$app       = JFactory::getApplication();
		\$appParams = \$app->getParams();
		\$model->setState('params', \$appParams);

		// Set the filters based on the module params
		\$model->setState('list.start', 0);
		\$model->setState('list.limit', (int) \$params->get('count', 5));
		\$model->setState('filter.published', 1);

		// Access filter
		\$access     = !JComponentHelper::getParams('com_${1/(.+)/\L\1/g}')->get('show_noauth');
		\$authorised = JAccess::getAuthorisedViewLevels(JFactory::getUser()->get('id'));
		\$model->setState('filter.access', \$access);

		// Category filter
		\$model->setState('filter.category_id', \$params->get('catid', array()));

		// User filter
		\$userId = JFactory::getUser()->get('id');
		switch (\$params->get('user_id'))
		{
			case 'by_me':
				\$model->setState('filter.author_id', (int) \$userId);
				break;
			case 'not_me':
				\$model->setState('filter.author_id', \$userId);
				\$model->setState('filter.author_id.include', false);
				break;

			case '0':
				break;

			default:
				\$model->setState('filter.author_id', (int) \$params->get('user_id'));
				break;
		}

		// Filter by language
		\$model->setState('filter.language', \$app->getLanguageFilter());

		//  Featured switch
		switch (\$params->get('show_featured'))
		{
			case '1':
				\$model->setState('filter.featured', 'only');
				break;
			case '0':
				\$model->setState('filter.featured', 'hide');
				break;
			default:
				\$model->setState('filter.featured', 'show');
				break;
		}

		// Set ordering
		\$order_map = array(
			'm_dsc' => 'a.modified DESC, a.created',
			'mc_dsc' => 'CASE WHEN (a.modified = ' . \$db->quote(\$db->getNullDate()) . ') THEN a.created ELSE a.modified END',
			'c_dsc' => 'a.created',
			'p_dsc' => 'a.publish_up',
		);

		\$ordering = JArrayHelper::getValue(\$order_map, \$params->get('ordering'), 'a.publish_up');
		\$dir = 'DESC';

		\$model->setState('list.ordering', \$ordering);
		\$model->setState('list.direction', \$dir);

		\$items = \$model->getItems();

		foreach (\$items as &\$item)
		{
			\$item->slug = \$item->id . ':' . \$item->alias;
			\$item->catslug = \$item->catid . ':' . \$item->category_alias;

			if (\$access || in_array(\$item->access, \$authorised))
			{
				// We know that user has the privilege to view the ${5:item}
				\$item->link = JRoute::_(${1/(.+)/\u\1/g}HelperRoute::get${5/(.+)/\u\1/g}Route(\$item->slug, \$item->catslug));
			}
			else
			{
				\$item->link = JRoute::_('index.php?option=com_users&view=login');
			}
		}

		return \$items;
	}
}
]]></content>
	<tabTrigger>jsitemodulehelperadvanced</tabTrigger>
</snippet>